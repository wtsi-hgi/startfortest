language: python

python:
  - 3.6

env:
  matrix:
    - TEST_PACAKGE=modules/bissell
    - TEST_PACAKGE=modules/consul
    - TEST_PACAKGE=modules/couchdb
    - TEST_PACAKGE=modules/gitlab
    - TEST_PACAKGE=modules/gogs
    - TEST_PACAKGE=modules/irods
    - TEST_PACAKGE=modules/mongo
    - TEST_PACAKGE=modules/samtools

services:
  - docker

before_install:
  - pip install codecov
  - pip install --disable-pip-version-check -r test_requirements.txt

install:
  - pip install --disable-pip-version-check -r requirements.txt

stages:
  - test_common
  - test
  - test_all

jobs:
  include:
    - stage: test_common
      script:
        - PYTHONPATH=. coverage run -m unittest discover -v -s useintest/tests/executables
        - PYTHONPATH=. coverage run -m unittest discover -v -s useintest/tests/services
        - coverage run setup.py -q install
        - coverage combine -a
        - coverage report
      env: []

    # XXX: Stupidly, Travis CI will only matrix expand this if it is called "test"
    - stage: test
      install:
        - pip install --disable-pip-version-check -r "${TESTED_PACKAGE_DIRECTORY}/requirements.txt" || true
      script:
        # XXX: If it becomes possible to persist coverage data between stage jobs, change this
        - export TEST_LATEST_ONLY=1
        - PYTHONPATH=. coverage run -m unittest discover -v -s "useintest/tests/${TEST_PACAKGE}"
        - coverage run setup.py -q install
        - coverage combine -a
        - coverage report

    # XXX: There is no data persistence between stages therefore it's not possible to combine the code-coverage for
    # all of the previous jobs :(
    # https://docs.travis-ci.com/user/build-stages/#Data-persistence-between-stages-and-jobs
    - stage: test_all
      before_install:
        - sudo apt-get update && sudo apt-get --only-upgrade install docker-ce
        # TODO: Install module requirements
      install:
        - printf "ubuntu:.*\ndebian:.*\nalpine:.*\npython:.*" > no-gc-images.txt
        - docker run -d -v /var/run/docker.sock:/var/run/docker.sock:ro -v $PWD:/working -e EXCLUDE_FROM_GC=/working/no-gc-images.txt spotify/docker-gc watch -n 300 /docker-gc
        - docker run --privileged -d -v /var/run/docker.sock:/var/run/docker.sock:ro docker watch -n 300 docker system prune -f
      script:
        - PYTHONPATH=. coverage run -m unittest discover -v -s useintest/tests
        - coverage run setup.py -q install
        - coverage combine -a
        - coverage report
      after_success:
        - codecov
      env:
        - TEST_LATEST_ONLY=0
